<div class="tab-pane" id="avgm2">
  <div class="panel panel-default" style="margin-top: 20px">
    <div class="panel-heading">Список вопросов, на которые отвечает график</div>
    <div class="panel-body">
      <ul>
        <li>Какова средняя/минимальная/максимальная стоимость м2 по всем квартирам/по каждой комнатности
            на прошлых/текущей неделе по всем объектам/по каждому объекту?</li>

      </ul>
    </div>
  </div>
  <div class="col-sm-12" style="margin-top: 20px">
    <%= render "apartment/charts/commons_part/rooms_filter" %>
  </div>
  <div class="row">
    <div id="apartment-m2-avg" class ="chart" style="height: 500px; width: 900px;"></div>
  </div>
  <script src="http://code.highcharts.com/highcharts-more.js"></script>
  <script type="application/javascript">
      $(function () {
          m2_chart = new Highcharts.Chart({
              credits:  {
                  enabled: false
              },
              chart: {
                  renderTo:'apartment-m2-avg'
              },
              title: {
                  text: 'Стоимость кв м '
              },

              xAxis: {
                  categories: getWeeksCategories()
              },

              yAxis: {
                  title: {
                      text: 'Тыс рублей'
                  },
                  formatter: function(){return value/1000;},
                  min:0
              },

              tooltip: {
                  crosshairs: true,
                  shared: true,
                  valueSuffix: ' тыс. руб.'
              },

              legend: {
              },
              series: []

          });

          redrawAvgChart = function(){
              weeks_group = []

              $.each(filtered_apartments, function(i,val){
                  if (!(val.status=='ДКП' || val.status == 'ПС'))
                      return;
                  apart_date = moment(val.ps_date||val.dkp_date)

                  $.each(getWeeksStarts(), function(t,week){
                      if(weeks_group[t]==null) weeks_group[t]=[]
                      if (apart_date.diff(week, 'days')>=0 && apart_date.diff(week, 'days')<7)
                      {
                          weeks_group[t].push(val)
                      }
                  })
              })

              weeks_data = [];
              $.each (weeks_group, function(i,group){
                  if (weeks_data[i]==null)
                      weeks_data[i]={count:0, first_price:0, end_price:0, max_first_price:0, max_end_price:0,
                          avg_first_price:0, avg_end_price:0, min_first_price: 100000000, min_end_price:100000000}
                  $.each(group, function(t,apart){

                      weeks_data[i]['count']++;
                      weeks_data[i]['first_price']+=apart.start_m2;
                      weeks_data[i]['end_price']+=apart.end_m2;
                      if(apart.start_m2>weeks_data[i].max_first_price) weeks_data[i].max_first_price= apart.start_m2
                      if(apart.end_m2>weeks_data[i].max_end_price) weeks_data[i].max_end_price= apart.end_m2

                      if(apart.start_m2<weeks_data[i].min_first_price)   weeks_data[i].min_first_price=apart.start_m2
                      if(apart.end_m2<weeks_data[i].min_end_price) weeks_data[i].min_end_price=apart.end_m2
                  })
                  weeks_data[i].avg_first_price = weeks_data[i].first_price/(weeks_data[i].count*1000)
                  weeks_data[i].avg_end_price = weeks_data[i].end_price/(weeks_data[i].count*1000)
                  weeks_data[i].max_first_price /= 1000
                  weeks_data[i].max_end_price /= 1000
                  weeks_data[i].min_first_price /= 1000
                  weeks_data[i].min_end_price /= 1000
                  if (weeks_data[i].min_first_price>1000)
                  {
                      weeks_data[i].min_first_price=0;
                      weeks_data[i].min_end_price=0;
                  }

              })

              series = [{
                  name: 'Начальная стоимость',
                  data: [],
                  zIndex: 10,
                  marker: {
                      fillColor: 'white',
                      lineWidth: 2,
                      lineColor: Highcharts.getOptions().colors[0]
                  }
              },{
                  name: 'Диапазон (начальная)',
                  data: [],
                  type: 'arearange',
                  lineWidth: 0,
                  linkedTo: ':previous',
                  zIndex: 2,
                  color: Highcharts.getOptions().colors[0],
                  fillOpacity: 0.15
              },{
                  name: 'Средняя итоговая',
                  data: [],
                  zIndex: 8,
                  marker: {
                      fillColor: 'white',
                      lineWidth: 2,
                      lineColor: Highcharts.getOptions().colors[1]
                  }
              },{
                  name: 'Диапазон (итоговая)',
                  data: [],
                  type: 'arearange',
                  lineWidth: 0,
                  linkedTo: ':previous',
                  color: Highcharts.getOptions().colors[1],
                  zIndex: 1,
                  fillOpacity: 0.15
              }]

              $.each(weeks_data, function(i,val){
                  series['0'].data.push(val.avg_first_price||0)
                  series['1'].data.push([val.min_first_price||0, val.max_first_price||0])
                  series['2'].data.push(val.avg_end_price||0)
                  series['3'].data.push([val.min_end_price||0, val.max_end_price||0]);
              })

              while(m2_chart.series.length > 0)
                  m2_chart.series[0].remove(false);
              $.each (series, function (i,ser){
                  m2_chart.addSeries(ser, false);
              })
              m2_chart.redraw();
          }

          redrawAvgChart();
      });



  </script>
</div>



