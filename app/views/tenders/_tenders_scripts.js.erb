

$(function () {

    Highcharts.setOptions({
        colors: ['#058DC7', '#50B432', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#FFF263', '#6AF9C4']
    })

    prices_chart = new Highcharts.Chart({
        credits:  {
            enabled: false
        },
        chart: {
            type: 'column',
            renderTo:'prices_chart'
        },
        title: {
            text: 'Общая стоимость конкурсов'
        },
        xAxis: {
            categories: data.years
        },
        yAxis: [{
            min: 0,
            title: {
                text: 'Сумма конкурсов (млн рублей)'
            },
            labels: {
                formatter: function () {
                    return this.value + ' млн. руб';
                }
            }
        },{
            min: 0,
            opposite: true,
            title: {
                text: 'среднее снижение цены (%)'
            }
        }],
        plotOptions: {
            column: {
                dataLabels: {
                    enabled: true,
                    color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                    style: {
                        textShadow: '0 0 3px black, 0 0 3px black'
                    }
                }
            }
        },
        tooltip:{
            shared: true
        },
        series: [{
            name: 'Начальная цена',
            data: [5, 3, 4],
            tooltip: {
                valueSuffix: ' млн. руб'
            }
        }, {
            name: 'Итоговая цена',
            data: [2, 2, 3],
            tooltip: {
                valueSuffix: ' млн. руб'
            }
        },{
            type: 'spline',
            name: 'Среднее снижение',
            color: Highcharts.getOptions().colors[3],
            data: [3, 2.67, 3],
            yAxis: 1,
            tooltip: {
                valueSuffix: ' %'
            },
            marker: {
                lineWidth: 2,
                lineColor: Highcharts.getOptions().colors[3],
                fillColor: 'white'
            }
        }]
    });

    m2_chart = new Highcharts.Chart({
        credits:  {
            enabled: false
        },
        chart: {
            type: 'column',
            renderTo:'m2_chart_type'
        },
        title: {
            text: 'Стоимость кв. м. по конкурсам разного типа'
        },
        xAxis: {
            categories: data.years
        },
        yAxis: [{
            min: 0,
            title: {
                text: 'Стоимость кв. м. по конкурсу'
            },
            stackLabels: {
                enabled: true,
                style: {
                    fontWeight: 'bold',
                    color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                }
            }
        }],
        plotOptions: {
            column: {
                dataLabels: {
                    enabled: true,
                    color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                    style: {
                        textShadow: '0 0 3px black, 0 0 3px black'
                    }
                }
            }
        },
        tooltip:{
          shared: true
        },
        series: [{
            type: 'spline',
            name: 'УК',
            data: data.uk_m2_price,
            tooltip: {
                valueSuffix: ' тыс. руб'
            }
        },{
            type: 'spline',
            name: 'Генподряд',
            data: data.gen_m2_price,
            tooltip: {
                valueSuffix: ' тыс. руб'
            }
        }]
    });

});
$(function () {
    types_chart = new Highcharts.Chart({
        credits:  {
            enabled: false
        },
        chart: {
            plotBackgroundColor: null,
            plotBorderWidth: 0,
            plotShadow: false,
            renderTo:'types_chart_summ'
        },
        title: {
            text: 'Суммы конкурсов по типу конкурса'
//            align: 'center',
//            verticalAlign: 'middle',
//            y: 50
        },
        tooltip: {
            valueDecimals: 0
        },
        plotOptions: {

        },
        series: [{
            type: 'pie',
            name: 'Сумма конкурсов',
            innerSize: '40%',
            data: data.types_chart_data,
            tooltip: {
                valueSuffix: ' млн. руб'
            },
            dataLabels: {
                formatter: function () {
                    return this.y > 1 ? '<b>' + this.point.name + ':</b> ' + toFixedAndParse(this.y/1000, 3) + ' млрд'  : null;
                }
            }
        }]
    });
});
$(function () {
    types_chart_count = new Highcharts.Chart({
        credits:  {
            enabled: false
        },
        chart: {
            plotBackgroundColor: null,
            plotBorderWidth: 0,
            plotShadow: false,
            renderTo:'types_chart_count'
        },
        title: {
            text: 'Число конкурсов по типу конкурса'
//            align: 'center',
//            verticalAlign: 'middle',
//            y: 50
        },
//        tooltip: {
//            pointFormat: '{series.name}: <b>{point.value:.1f}</b>'
//        },
        plotOptions: {
            pie: {
//                dataLabels: {
//                    enabled: true,
//                    distance: -50,
//                    style: {
//                        fontWeight: 'bold',
//                        color: 'white',
//                        textShadow: '0px 1px 2px black'
//                    }
//                },
//                startAngle: -90,
//                endAngle: 90,
                center: ['50%', '50%']
            }
        },
        series: [{
            type: 'pie',
            name: 'Количество конкурсов',
            innerSize: '40%',
            data: data.types_chart_count_data,
            dataLabels: {
                formatter: function () {
                    return this.y > 1 ? '<b>' + this.point.name + ':</b> ' + this.y + ''  : null;
                }
            }
        }]
    });
});
$(function() {
    qty_chart = new Highcharts.Chart({
        credits:  {
            enabled: false
        },
        chart: {
            type: 'column',
            renderTo:'qty_chart'
        },
        title: {
            text: 'Число конкурсов по числу допущенных заявок'
        },
        xAxis: {
            categories: data.qty_years
        },
        yAxis: [{
            min: 0,
            title: {
                text: '%'
            },
            stackLabels: {
                enabled: true,
                style: {
                    fontWeight: 'bold',
                    color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                }
            }
        }],
        tooltip: {
            pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',
            shared: true
        },
        plotOptions: {
            column: {
                stacking: 'percent',
                dataLabels: {
                    enabled: true,
                    color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                    style: {
                        textShadow: '0 0 3px black, 0 0 3px black'
                    }
                }
            }
        },
        series: []
    });

})

$(function () {
    console.log(data);
    var series = getChartData();
    prices_chart.series[0].setData(series[0], false);
    prices_chart.series[1].setData(series[1], false);
    prices_chart.series[2].setData(series[2]);
//    m2_chart.series[0].setData(series[5]);
    getQtyChartData();

    $('#qty_count_button').click(function(){
        while(qty_chart.series.length > 0)
            qty_chart.series[0].remove(false);
        $.each (data.qty, function (i,qty){
            qty_chart.addSeries(qty, false);
        })
        qty_chart.redraw();


    })

    $('#qty_sum_button').click(function(){
        while(qty_chart.series.length > 0)
            qty_chart.series[0].remove(false);
        $.each (data.qty_sum, function (i,qty){
            qty_chart.addSeries(qty, false);
        })
        qty_chart.redraw();

    })
    //console.log(qty_chart.series[0])

})

getChartData = function (){

    var res =[];
    res[0] = [];
    res[1] = [];
    res[2] = [];
    res[3] = [];
    res[4] = [];
    res[5] = [];

    $.each (data.prices_begin, function (i,val){
        res[0].push(toFixedAndParse(data.prices_begin[i]/1000000))
        res[1].push(toFixedAndParse(data.prices_end[i]/1000000));
        res[2].push(toFixedAndParse(data.prices_percent[i]/data.count[i],2));
        res[3].push(toFixedAndParse(data.one_start[i],2))
        res[4].push(toFixedAndParse(data.one_end[i],2))
        res[5].push(toFixedAndParse(data.one_end[i]/data.count[i],2))
    })
    //console.log(res);
    return res;

}

getQtyChartData = function (){
    $.each (data.qty, function (i,qty){
        qty_chart.addSeries(qty, false);
    })
    qty_chart.redraw();
}

toFixedAndParse = function (value, dec){
    dec |= 0
    //console.log(value)
    return parseFloat ((value).toFixed(dec))
}


