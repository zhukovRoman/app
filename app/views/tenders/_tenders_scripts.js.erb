

$(function () {

    Highcharts.setOptions({
        colors: ['#058DC7', '#50B432', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#FFF263', '#6AF9C4']
    })

    prices_chart = new Highcharts.Chart({
        credits:  {
            enabled: false
        },
        chart: {
            type: 'column',
            renderTo:'prices_chart'
        },
        title: {
            text: 'Общая стоимость конкурсов'
        },
        xAxis: {
            categories: data.years
        },
        yAxis: [{
            min: 0,
            title: {
                text: 'Сумма конкурсов (млн рублей)'
            },
            labels: {
                formatter: function () {
                    return this.value + ' млн. руб';
                }
            }
        }],
        plotOptions: {
            column: {
                dataLabels: {
                    enabled: true,
                    color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                    style: {
                        textShadow: '0 0 3px black, 0 0 3px black'
                    }
                }
            }
        },
        tooltip:{
            formatter: function() {
                var result = '<b>' + this.x + '</b>';
                $.each(this.points, function(i, datum) {
                    console.log(datum)
                    result += '<br /> <i style="color: '+datum.point.series.color+'">' + datum.series.name + '</i>: ' + datum.y + ' млн руб';

                });
                //console.log(this.points)
                result += '<br />Среднее снижение цены ' + this.points[0].point.percent + '%'

                return result;
            },
            //headerFormat: '<div style="font-size:13px">{point.key}</div>',
            //pointFormat: '<div><b>{series.name}</b>: ' + '{point.y} человек</div>' ,
            //footerFormat: '',
            shared: true,
            useHTML: true
        },
        series: [{
            name: 'Начальная цена',
            data: [{y: 5},{y: 3},{y: 4}],
            tooltip: {
                valueSuffix: ' млн. руб'
            }
        }, {
            name: 'Итоговая цена',
            data: [2, 2, 3],
            tooltip: {
                valueSuffix: ' млн. руб'
            }
        }]
    });


});
$(function () {
    types_chart = new Highcharts.Chart({
        credits:  {
            enabled: false
        },
        chart: {
            plotBackgroundColor: null,
            plotBorderWidth: 0,
            plotShadow: false,
            renderTo:'types_chart_summ'
        },
        title: {
            text: 'Суммы конкурсов по типу конкурса'
//            align: 'center',
//            verticalAlign: 'middle',
//            y: 50
        },
        tooltip: {
            valueDecimals: 0,
            shared: true
        },
        plotOptions: {

        },
        series: [{
            type: 'pie',
            name: 'Сумма конкурсов',
            innerSize: '40%',
            data: data.types_chart_data,
            tooltip: {
                valueSuffix: ' млн руб'
            },
            dataLabels: {
                formatter: function () {
                    return this.y > 1 ? '<b>' + this.point.name + ':</b> ' + toFixedAndParse(this.y/1, 0) + ' млн'  : null;
                }
            }
        }]
    });
});
$(function () {
    types_chart_count = new Highcharts.Chart({
        credits:  {
            enabled: false
        },
        chart: {
            plotBackgroundColor: null,
            plotBorderWidth: 0,
            plotShadow: false,
            renderTo:'types_chart_count'
        },
        title: {
            text: 'Число конкурсов по типу конкурса'
//            align: 'center',
//            verticalAlign: 'middle',
//            y: 50
        },
        tooltip: {
            shared: true
//            pointFormat: '{series.name}: <b>{point.value:.1f}</b>'
        },
        plotOptions: {
            pie: {
//                dataLabels: {
//                    enabled: true,
//                    distance: -50,
//                    style: {
//                        fontWeight: 'bold',
//                        color: 'white',
//                        textShadow: '0px 1px 2px black'
//                    }
//                },
//                startAngle: -90,
//                endAngle: 90,
                center: ['50%', '50%']
            }
        },
        series: [{
            type: 'pie',
            name: 'Количество конкурсов',
            innerSize: '40%',
            data: data.types_chart_count_data,
            dataLabels: {
                formatter: function () {
                    return this.y > 1 ? '<b>' + this.point.name + ':</b> ' + this.y + ''  : null;
                }
            }
        }]
    });
});
$(function() {
    qty_chart = new Highcharts.Chart({
        credits:  {
            enabled: false
        },
        chart: {
            type: 'column',
            renderTo:'qty_chart'
        },
        title: {
            text: 'Конкурсы по числу допущенных заявок'
        },
        xAxis: {
            categories: data.qty_years
        },
        yAxis: [{
            min: 0,
            title: {
                text: '%'
            },
            stackLabels: {
                enabled: true,
                style: {
                    fontWeight: 'bold',
                    color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                }
            }
        }],
        tooltip: {
            pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y} </b> ({point.percentage:.0f}%)<br/>',
            shared: true
            //valueSuffix: " конкурсов"
        },
        plotOptions: {
            column: {
                stacking: 'percent',
                dataLabels: {
                    enabled: true,
                    color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                    style: {
                        textShadow: '0 0 3px black, 0 0 3px black'
                    }
                }
            }
        },
        series: []
    });

})

$(function () {
    console.log(data);
    var series = getChartData();
    prices_chart.series[0].setData(series[0], false);
    prices_chart.series[1].setData(series[1]);
   // prices_chart.series[2].setData(series[2]);
//    m2_chart.series[0].setData(series[5]);
    getQtyChartData();

    $('#qty_count_button').click(function(){
        while(qty_chart.series.length > 0)
            qty_chart.series[0].remove(false);
        $.each (data.qty, function (i,qty){
            qty_chart.addSeries({data: qty.data, name: qty.name, tooltip: { valueSuffix: ' конкурсов'}}, false);
        })
        qty_chart.redraw();


    })

    $('#qty_sum_button').click(function(){
        while(qty_chart.series.length > 0)
            qty_chart.series[0].remove(false);
        $.each (data.qty_sum, function (i,qty){
            qty_chart.addSeries({data: qty.data, name: qty.name, tooltip: { valueSuffix: ' млрд'}}, false);
        })
        qty_chart.redraw();
    })

    function changeType(type) {
        var chart = qty_chart;
        for (var i =0; i < chart.series.length; i++){
            chart.series[i].update({
                stacking: type
            }, false);
        }
        chart.redraw();
    };


})

getChartData = function (){

    var res =[];
    res[0] = [];
    res[1] = [];
    res[2] = [];
    res[3] = [];
    res[4] = [];
    res[5] = [];

    $.each (data.prices_begin, function (i,val){
        res[0].push({y: toFixedAndParse(data.prices_begin[i]/1000000), percent: toFixedAndParse(data.prices_percent[i]/data.count[i],2)})
        res[1].push({y: toFixedAndParse(data.prices_end[i]/1000000), percent: toFixedAndParse(data.prices_percent[i]/data.count[i],2)});
        res[2].push(toFixedAndParse(data.prices_percent[i]/data.count[i],2));
        res[3].push(toFixedAndParse(data.one_start[i],2))
        res[4].push(toFixedAndParse(data.one_end[i],2))
        res[5].push(toFixedAndParse(data.one_end[i]/data.count[i],2))
    })
    //console.log(res);
    return res;

}

getQtyChartData = function (){
    $.each (data.qty, function (i,qty){
        qty_chart.addSeries({data: qty.data, name: qty.name, tooltip: { valueSuffix: ' конкурсов'}}, false);
    })
    qty_chart.redraw();
}

toFixedAndParse = function (value, dec){
    dec |= 0
    //console.log(value)
    return parseFloat ((value).toFixed(dec))
}


