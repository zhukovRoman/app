<div class="panel panel-default">
  <div class="panel-heading">Список вопросов, на которые отвечает график</div>
  <div class="panel-body">
    <ul>
      <li>Сколько объектов определенного года ввода, назначения и округа имеют документ?</li>
      <li>Сколько объектов определенного года ввода, назначения и округа не имеют документ и сколько просрочили его получение?</li>
      <li>Какие объекты просрочили получение документа и кто ответсвенный за эти объекты?</li>
    </ul>
    <!--<i style="color: red">Данные реальные</i>-->
  </div>
</div>

<div class="row" style="margin-bottom: 20px">
  <div class="btn-group filter" data-toggle="buttons" id="appointment_filter_top" style="margin-left: 100px">
        <label class="btn btn-primary active" id="live" data-childs="['жилье', 'инженерия']">
          <input type="checkbox">Жилище
        </label>
        <label class="btn btn-primary active" id="edu" data-childs="['БНК', 'ДОУ', 'Спорт - ФОК', 'ФОК' ,'школа' ]">
          <input type="checkbox">Образование
        </label>
        <label class="btn btn-primary active" id="medi" data-childs="['Поликлиника']">
          <input type="checkbox">Здравоохранение
        </label>
        <label class="btn btn-primary active" id="other" data-childs="['Прочие объекты', 'переход', 'Дороги']">
          <input type="checkbox">Прочее
        </label>
  </div>
</div>

<div class="row" style="margin-bottom: 20px">
    <div class="btn-group filter" data-toggle="buttons" id="appointment_filter" style="margin-left: 100px">
      <% @appointments.each do |a| %>
          <label class="btn btn-primary active" id="<%= a.appointment  %>">
            <input type="checkbox"><%= a.appointment %>
          </label>
      <% end %>
    </div>
</div>
<div class="row">
  <div class="col-sm-2">
    <ul class="nav nav-pills nav-stacked" id="documents">
      <li id="GPZU" class="active" data-title="ГПЗУ"><a href="#">ГПЗУ</a></li>
      <li id="MGE" data-title="экспертизы"><a href="#">Экспертиза</a></li>
      <li id="razresh" data-title="разрешения"><a href="#">Разрешение</a></li>
    </ul>
    <button type="button" class="btn btn-danger" style="margin-top: 20px" id="overdue_link">Список просроченных</button>

  </div>
  <div class="col-sm-8">
    <div class="col-sm-12" >
      <div class="btn-group filter" data-toggle="buttons" id="year_filter" >
        <% @years.each do |y| %>
            <label class="btn btn-primary active" id="<%= y  %>">
              <input type="checkbox"><%= y %>
            </label>
        <% end %>
      </div>
    </div>
    <div class="col-sm-12">
      <div style="width: 730px; height: 500px" id="chart"></div>
    </div>
    <div class="col-sm-12" id="table_div">

    </div>
  </div>
  <div class="col-sm-2" id="okrug_filter">
    <div id="all-okrugs" class="btn btn-default btn-xs">Все округа</div>
    <% @districts.each do |d| %>
        <div><input id="<%= d.region||"---"  %>" type="checkbox" checked><%= d.region||"---"  %></div>
    <% end %>
  </div>
</div>
<div class="row" id="overdue_table_row" style="display: none">
  <table class="table table-condensed">
    <thead>
    <tr>
      <th>#</th>
      <th>Адрес</th>
      <th>Плановая дата получения</th>
      <th>Менеджер</th>
    </tr>
    </thead>
    <tbody id="overdue_table_body">

    </tbody>
  </table>
</div>


<script type="application/javascript">

    selectAllOkrug = function (){
        $.each($("#okrug_filter input"), function(i , val){
            $(val).prop('checked', true);
        });
        redrawCharts();
    }

    getCurrentDocument = function (){
        return $('#documents > li.active').attr('id');
    }


    getYearsFilter = function(){
        var res = [];
        $.each($("#year_filter label.active"), function() {
            res.push($(this).attr('id'))
        })
        return res;
    }

    getOkrugFilter = function () {
        var res = Array();
        $.each($("#okrug_filter input:checked"), function(i , val){
            res.push($(val).attr("id"))
        })
        return res;
    }

    getAppointmentFilter = function (){
        var res = [];
        $.each($("#appointment_filter label.active"), function() {
            res.push($(this).attr('id'))
        })
        //console.log(res)
        return res;
    }

    appointment_group_select = function(){
        //console.log($("#appointment_filter label.active"));
        $.each($("#appointment_filter label"), function() {
            $(this).removeClass('active');
        })
        setTimeout(function() {
            $.each($("#appointment_filter_top label.active"), function() {
                arr = eval($(this).attr('data-childs'))
                $.each(arr, function(i, val){
                    $("label[id='"+val+"'").addClass('active')
                })
            })
            redrawCharts();
        }, 100)


    }

    showOverdueObjects = function(){
        var document = getCurrentDocument();
        var overdues_objects = [];
        $.each(filteredObjects, function(i,val){
           if (val[document]=='Просрочено')
            overdues_objects.push(val);
        });
        bindOverdueObjects(document, overdues_objects);
        $("#overdue_table_row").show();
        console.log(overdues_objects);
    }

    bindOverdueObjects = function(doc, objs){
        var overdueTable = document.getElementById('overdue_table_body');
        $(overdueTable).html('');
        $.each(objs, function(i, val){
            var row = document.createElement('tr');
            row.innerHTML = "<td>"+i+"</td>"+
                            "<td><a href='view?id="+val.id+"'>"+val.adress+"</a></td>"+
                            "<td>"+val.plansDates[doc]+"</td>"+
                            "<td>"+val.manager+"</td>";
            overdueTable.appendChild(row);
        });
    }


    $(function(){
        //навешиваем обработчики
        $("#all-okrugs").on('click', selectAllOkrug);
        $("#okrug_filter input").change(redrawCharts);
        $("#year_filter label").change(redrawCharts);
        $("#documents li a").click(changeDocument);
        $("#appointment_filter label").change(redrawCharts);
        $("#appointment_filter_top label").change(appointment_group_select);
        $("#overdue_link").click(showOverdueObjects);
        createDocumentChart();
        createFinChart();
        redrawCharts();
    });

    changeDocument = function (){
        $("#documents li.active").removeClass('active');
        $(this).parent().addClass('active');
        $("#overdue_table_row").hide();
        redrawDocumentChart();
    }

    redrawCharts = function () {
        //add some delay for addClass complete
        setTimeout(function() {
//          console.log(getYearsFilter(), getOkrugFilter())
            $("#overdue_table_row").hide();
            filterObjects();
            redrawDocumentChart();
            redrawFinanceChart();
            if (myMap != undefined)
            {
                filter_map_points();
                rebind_markers();
            }
        }, 100)
    }

    redrawDocumentChart = function(){
        var filteredObjects = window.filteredObjects;
        var currentDocument = getCurrentDocument()
        var data = {};
        $.each(filteredObjects, function(i,obj){
            data[obj[currentDocument]] = (data[obj[currentDocument]] || 0) + 1
        });
        changeChartParams(data,currentDocument);
    }

    redrawFinanceChart = function () {
        //add some delay for addClass complete
        setTimeout(function() {
            var filteredObjects = window.filteredObjects;
            var data = [
                ['Остаток оплаты',   0],
                ['Выполнено работ',       0],
                ['Осталось выполнить',    0]
            ];
            $.each(filteredObjects, function(i,obj){
                data[0][1]+=(obj.limit-obj.payed)
                data[1][1]+=obj.complete
                data[2][1]+=obj.incomplete
            });
            fin_chart.series[0].setData(data, true);
        }, 100)

    }

    changeChartParams = function (data, currentDocument){

        var series = []
        var summ = 0;
        for (variable in data) {
            series.push([variable, data[variable]])
            summ += data[variable];
        }
        chart.series[0].setData(series, true);
        allTitle.attr({
            text: summ
        });
        chart.setTitle({ text: 'Наличие '+ $("#"+currentDocument).attr('data-title') })
    }

    createFinChart = function(){
        // Build the chart
        fin_chart = new Highcharts.Chart({
            credits:  {
                enabled: false
            },
            chart: {
                renderTo:'fin_chart',
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false
            },
            title: {
                text: 'Финансы по отрослям'
            },
            tooltip: {
                formatter: function () {
                    var s ="";
                    $.each(this.series.points, function (i, point) {
                        s += "<b>"+point.name + '</b> ' + point.y + ' млн рублей <br/>';
                    });
                    return s;
                },
                shared: true,
                useHTML: true
            },
            plotOptions: {
                pie: {
                    center: ['50%', '50%']
                }
            },
            series: [{
                type: 'pie',
                name: 'Сумма',
                innerSize: '0%',
                data: [
                    ['Остаток оплаты',   45.0],
                    ['Выполнено работ',       26.8],
                    ['Осталось выполнить',    8.5]

                ]
            }]
        });
    }

    filterObjects = function ()
    {
        //var res = []
        var years = getYearsFilter();
        var okrugs = getOkrugFilter();
        var appointments = getAppointmentFilter();

        objects = data['objects'];
        window.filteredObjects.length=0;
        $.each(objects, function(i, obj){
            if ($.inArray( obj.year, years )!=-1 &&
                    $.inArray(obj.okrug, okrugs)!= -1 &&
                    $.inArray(obj.appointment, appointments) != -1)
            {
                window.filteredObjects.push(obj);
            }
        })
    }

    createDocumentChart = function(){
        chart = new Highcharts.Chart({
            credits:  {
                enabled: false
            },
            chart: {
                renderTo: 'chart',
                plotBackgroundColor: null,
                plotBorderWidth: 0,
                plotShadow: true
            },
            title: {
                text: 'Наличие ГПЗУ'
            },
            tooltip: {
                formatter: function () {
//                    var s = this.series.name +" "+  this.point.name+"<br>";
                    var s ="";
                    $.each(this.series.points, function (i, point) {
                        s += "<b>"+point.name + '</b> ' + point.y + ' объектов <br/>';
                    });

                    //s += '<a href="/object/overdue?okrugs=['+getOkrugFilter()+']">Список просроченных объектов</a>'

                    return s;

                },
                shared: true,
                useHTML: true
//                pointFormat: '{series.name}: <b>{point.y}</b>'
            },
            plotOptions: {
                pie: {
                    center: ['50%', '50%']
                }
            },
            series: [{
                type: 'pie',
                name: 'Статус получения: ',
                innerSize: '50%',
                data: [
                    ['С ГПЗУ',   0],
                    ['БЕЗ ГПЗУ',  0],
                    ['ПРОСРОЧЕНО', 0]

                ]
            }]
        });
        allTitle = chart.renderer.text('0', 320, 280)
                .css({
                    color: "black",
                    "font-size" : "40pt"
                })
                .add();
    }
    data = <%= @data.to_json.html_safe %>

    filteredObjects = [];

    $.each(data['objects'], function(i, val){
        window.filteredObjects.push(val);
    })
</script>
